/*
 * This file was generated by the CommonAPI Generators.
 * Used org.genivi.commonapi.someip 3.2.15.v202410041637.
 * Used org.franca.core 0.13.1.201807231814.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
 * If a copy of the MPL was not distributed with this file, You can obtain one at
 * http://mozilla.org/MPL/2.0/.
 */
#ifndef V1_COMMONAPI_OTA_FOTAMPU_UPDATE_SOMEIP_STUB_ADAPTER_HPP_
#define V1_COMMONAPI_OTA_FOTAMPU_UPDATE_SOMEIP_STUB_ADAPTER_HPP_

#include <v1/commonapi/ota/FOTAMPUUpdateStub.hpp>
#include <v1/commonapi/ota/FOTAMPUUpdateSomeIPDeployment.hpp>

#if !defined (COMMONAPI_INTERNAL_COMPILATION)
#define COMMONAPI_INTERNAL_COMPILATION
#define HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

#include <CommonAPI/SomeIP/AddressTranslator.hpp>
#include <CommonAPI/SomeIP/StubAdapterHelper.hpp>
#include <CommonAPI/SomeIP/StubAdapter.hpp>
#include <CommonAPI/SomeIP/Factory.hpp>
#include <CommonAPI/SomeIP/Types.hpp>
#include <CommonAPI/SomeIP/Constants.hpp>

#if defined (HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE)
#undef COMMONAPI_INTERNAL_COMPILATION
#undef HAS_DEFINED_COMMONAPI_INTERNAL_COMPILATION_HERE
#endif

namespace v1 {
namespace commonapi {
namespace ota {

template <typename _Stub = ::v1::commonapi::ota::FOTAMPUUpdateStub, typename... _Stubs>
class FOTAMPUUpdateSomeIPStubAdapterInternal
    : public virtual FOTAMPUUpdateStubAdapter,
      public CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...>,
      public std::enable_shared_from_this< FOTAMPUUpdateSomeIPStubAdapterInternal<_Stub, _Stubs...>>
{
public:
    typedef CommonAPI::SomeIP::StubAdapterHelper< _Stub, _Stubs...> FOTAMPUUpdateSomeIPStubAdapterHelper;

    ~FOTAMPUUpdateSomeIPStubAdapterInternal() {
        deactivateManagedInstances();
        FOTAMPUUpdateSomeIPStubAdapterHelper::deinit();
    }

    void deactivateManagedInstances() {}
    
    CommonAPI::SomeIP::GetAttributeStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        CommonAPI::Version
    > getFOTAMPUUpdateInterfaceVersionStubDispatcher;

    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< std::string>,
        std::tuple< FOTAMPUUpdate::MPUUpdateTaskBuildingResp>,
        std::tuple< CommonAPI::SomeIP::StringDeployment>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUUpdateTaskBuildingRespDeployment_t>
    > bldUpdtTaskStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< uint16_t>,
        std::tuple< std::string>,
        std::tuple< CommonAPI::SomeIP::IntegerDeployment<uint16_t>>,
        std::tuple< CommonAPI::SomeIP::StringDeployment>
    > stwrTrsmtPrgsStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< FOTAMPUUpdate::MPUUpdateStopReq>,
        std::tuple< FOTAMPUUpdate::MPUUpdateStopResp>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUUpdateStopReqDeployment_t>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUUpdateStopRespDeployment_t>
    > stopUpdtStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< uint16_t>,
        std::tuple< FOTAMPUUpdate::MPUInstallStartResp>,
        std::tuple< CommonAPI::SomeIP::IntegerDeployment<uint16_t>>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUInstallStartRespDeployment_t>
    > startInstStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< uint16_t>,
        std::tuple< std::string>,
        std::tuple< CommonAPI::SomeIP::IntegerDeployment<uint16_t>>,
        std::tuple< CommonAPI::SomeIP::StringDeployment>
    > reqInstResultStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< FOTAMPUUpdate::MPUStatusSwitchReq>,
        std::tuple< FOTAMPUUpdate::MPUStatusSwitchResp>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUStatusSwitchReqDeployment_t>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUStatusSwitchRespDeployment_t>
    > switchABBankStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< uint16_t>,
        std::tuple< FOTAMPUUpdate::MPUGetStatusResp>,
        std::tuple< CommonAPI::SomeIP::IntegerDeployment<uint16_t>>,
        std::tuple< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUGetStatusRespDeployment_t>
    > getUpdtTaskStatusStubDispatcher;
    
    CommonAPI::SomeIP::MethodWithReplyStubDispatcher<
        ::v1::commonapi::ota::FOTAMPUUpdateStub,
        std::tuple< uint16_t>,
        std::tuple< std::string>,
        std::tuple< CommonAPI::SomeIP::IntegerDeployment<uint16_t>>,
        std::tuple< CommonAPI::SomeIP::StringDeployment>
    > reqSwitchResultStubDispatcher;
    
    FOTAMPUUpdateSomeIPStubAdapterInternal(
        const CommonAPI::SomeIP::Address &_address,
        const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
        const std::shared_ptr<CommonAPI::StubBase> &_stub):
        CommonAPI::SomeIP::StubAdapter(_address, _connection),
        FOTAMPUUpdateSomeIPStubAdapterHelper(
            _address,
            _connection,
            std::dynamic_pointer_cast< FOTAMPUUpdateStub>(_stub)),
        getFOTAMPUUpdateInterfaceVersionStubDispatcher(&FOTAMPUUpdateStub::lockInterfaceVersionAttribute, &FOTAMPUUpdateStub::getInterfaceVersion, false, true),
        bldUpdtTaskStubDispatcher(
            &FOTAMPUUpdateStub::BldUpdtTask,
            false,
            _stub->hasElement(0),
            std::make_tuple(static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)),
            std::make_tuple(static_cast< ::v1::commonapi::ota::FOTAMPUUpdate_::MPUUpdateTaskBuildingRespDeployment_t* >(nullptr)))
        
        ,
        stwrTrsmtPrgsStubDispatcher(
            &FOTAMPUUpdateStub::StwrTrsmtPrgs,
            false,
            _stub->hasElement(1),
            std::make_tuple(static_cast< CommonAPI::SomeIP::IntegerDeployment<uint16_t>* >(nullptr)),
            std::make_tuple(static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)))
        
        ,
        stopUpdtStubDispatcher(
            &FOTAMPUUpdateStub::StopUpdt,
            false,
            _stub->hasElement(2),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::StopUpdt_MPUUpdateStopReqDeployment),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::StopUpdt_MPUUpdateStopRespDeployment))
        
        ,
        startInstStubDispatcher(
            &FOTAMPUUpdateStub::StartInst,
            false,
            _stub->hasElement(3),
            std::make_tuple(static_cast< CommonAPI::SomeIP::IntegerDeployment<uint16_t>* >(nullptr)),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::StartInst_MPUInstallStartRespDeployment))
        
        ,
        reqInstResultStubDispatcher(
            &FOTAMPUUpdateStub::ReqInstResult,
            false,
            _stub->hasElement(4),
            std::make_tuple(static_cast< CommonAPI::SomeIP::IntegerDeployment<uint16_t>* >(nullptr)),
            std::make_tuple(static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)))
        
        ,
        switchABBankStubDispatcher(
            &FOTAMPUUpdateStub::SwitchABBank,
            false,
            _stub->hasElement(5),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::SwitchABBank_MPUStatusSwitchReqDeployment),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::SwitchABBank_MPUStatusSwitchRespDeployment))
        
        ,
        getUpdtTaskStatusStubDispatcher(
            &FOTAMPUUpdateStub::GetUpdtTaskStatus,
            false,
            _stub->hasElement(6),
            std::make_tuple(static_cast< CommonAPI::SomeIP::IntegerDeployment<uint16_t>* >(nullptr)),
            std::make_tuple(&::v1::commonapi::ota::FOTAMPUUpdate_::GetUpdtTaskStatus_MPUGetStatusRespDeployment))
        
        ,
        reqSwitchResultStubDispatcher(
            &FOTAMPUUpdateStub::ReqSwitchResult,
            false,
            _stub->hasElement(7),
            std::make_tuple(static_cast< CommonAPI::SomeIP::IntegerDeployment<uint16_t>* >(nullptr)),
            std::make_tuple(static_cast< CommonAPI::SomeIP::StringDeployment* >(nullptr)))
        
    {
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x1) }, &bldUpdtTaskStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x2) }, &stwrTrsmtPrgsStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x3) }, &stopUpdtStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x4) }, &startInstStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x5) }, &reqInstResultStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x7) }, &switchABBankStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0x8) }, &getUpdtTaskStatusStubDispatcher );
        FOTAMPUUpdateSomeIPStubAdapterHelper::addStubDispatcher( { CommonAPI::SomeIP::method_id_t(0xa) }, &reqSwitchResultStubDispatcher );
        // Provided events/fields
    }

    // Register/Unregister event handlers for selective broadcasts
    void registerSelectiveEventHandlers();
    void unregisterSelectiveEventHandlers();

};


template <typename _Stub, typename... _Stubs>
void FOTAMPUUpdateSomeIPStubAdapterInternal<_Stub, _Stubs...>::registerSelectiveEventHandlers() {

}

template <typename _Stub, typename... _Stubs>
void FOTAMPUUpdateSomeIPStubAdapterInternal<_Stub, _Stubs...>::unregisterSelectiveEventHandlers() {

}

template <typename _Stub = ::v1::commonapi::ota::FOTAMPUUpdateStub, typename... _Stubs>
class FOTAMPUUpdateSomeIPStubAdapter
    : public FOTAMPUUpdateSomeIPStubAdapterInternal<_Stub, _Stubs...> {
public:
    FOTAMPUUpdateSomeIPStubAdapter(const CommonAPI::SomeIP::Address &_address,
                                            const std::shared_ptr<CommonAPI::SomeIP::ProxyConnection> &_connection,
                                            const std::shared_ptr<CommonAPI::StubBase> &_stub)
        : CommonAPI::SomeIP::StubAdapter(_address, _connection),
          FOTAMPUUpdateSomeIPStubAdapterInternal<_Stub, _Stubs...>(_address, _connection, _stub) {
    }
};

} // namespace ota
} // namespace commonapi
} // namespace v1

#endif // V1_COMMONAPI_OTA_FOTAMPU_Update_SOMEIP_STUB_ADAPTER_HPP_
